<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Networking on /etc/openjny</title><link>https://openjny.github.io/tags/networking/</link><description>Recent content in Networking on /etc/openjny</description><generator>Hugo</generator><language>ja</language><lastBuildDate>Sat, 15 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://openjny.github.io/tags/networking/index.xml" rel="self" type="application/rss+xml"/><item><title>ExpressRoute (Microsoft Peering) を使った経路最適化の勘所</title><link>https://openjny.github.io/posts/2024/06/15/optimizing-routing-with-expressroute-ms-peering/</link><pubDate>Sat, 15 Jun 2024 00:00:00 +0000</pubDate><guid>https://openjny.github.io/posts/2024/06/15/optimizing-routing-with-expressroute-ms-peering/</guid><description/></item><item><title>Azure で IaC (ARM Template/Bicep) するなら PSRule for Azure！#2 [CI パイプライン編]</title><link>https://openjny.github.io/posts/2022/09/08/psrule-for-azure-02/</link><pubDate>Thu, 08 Sep 2022 00:00:00 +0000</pubDate><guid>https://openjny.github.io/posts/2022/09/08/psrule-for-azure-02/</guid><description/></item><item><title>Azure で IaC (ARM Template/Bicep) するなら PSRule for Azure！#1 [導入編]</title><link>https://openjny.github.io/posts/2022/09/07/psrule-for-azure-01/</link><pubDate>Wed, 07 Sep 2022 00:00:00 +0000</pubDate><guid>https://openjny.github.io/posts/2022/09/07/psrule-for-azure-01/</guid><description/></item><item><title>Bluebird: Azure SDN を支えるプログラマブル SDN ToR スイッチ</title><link>https://openjny.github.io/posts/2022/04/15/bluebird-azure-adn-tor-switch/</link><pubDate>Fri, 15 Apr 2022 00:00:00 +0000</pubDate><guid>https://openjny.github.io/posts/2022/04/15/bluebird-azure-adn-tor-switch/</guid><description/></item><item><title>Azure Gateway Load Balancer (Preview) を試す</title><link>https://openjny.github.io/posts/2021/11/11/azure-gateway-load-balancer-with-linux-vm/</link><pubDate>Thu, 11 Nov 2021 00:00:00 +0000</pubDate><guid>https://openjny.github.io/posts/2021/11/11/azure-gateway-load-balancer-with-linux-vm/</guid><description/></item><item><title>Linux での TCP KeepAlive 有効化方法</title><link>https://openjny.github.io/posts/2021/03/11/how-to-enable-tcp-keepalive-on-linux/</link><pubDate>Thu, 11 Mar 2021 00:00:00 +0000</pubDate><guid>https://openjny.github.io/posts/2021/03/11/how-to-enable-tcp-keepalive-on-linux/</guid><description>&lt;p>Linux の TCP KeepAlive について調べたので、その備忘録です。&lt;/p>
&lt;h2 id="tldr">
 TL;DR
 &lt;a class="heading-link" href="#tldr">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="見出しへのリンク">&lt;/i>
 &lt;span class="sr-only">見出しへのリンク&lt;/span>
 &lt;/a>
&lt;/h2></description></item><item><title>Azure Load Balancer の正常性関連メトリックを使いこなす</title><link>https://openjny.github.io/posts/2020/10/03/azure-lb-health-probes-101/</link><pubDate>Sat, 03 Oct 2020 00:00:00 +0000</pubDate><guid>https://openjny.github.io/posts/2020/10/03/azure-lb-health-probes-101/</guid><description/></item><item><title>和訳: Who’s to blame? Debugging Internet performance for Azure users with BlameIt</title><link>https://openjny.github.io/posts/2020/03/11/debugging-internet-performance-for-azure-users-with-blameit/</link><pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate><guid>https://openjny.github.io/posts/2020/03/11/debugging-internet-performance-for-azure-users-with-blameit/</guid><description>&lt;p>Azure にアクセスするユーザーが低レイテンシで快適にサービスを利用できるように、Microsoft では ISP (自律システム) の障害を検知するシステムを活用しています。そのシステム &amp;ldquo;BlameIt&amp;rdquo; を紹介する公式ブログがあったので、それを和訳してみました。&lt;/p></description></item><item><title>Azure Load Balancer の SNAT がさっぱりわからん</title><link>https://openjny.github.io/posts/2019/12/25/alb-snat/</link><pubDate>Wed, 25 Dec 2019 00:00:00 +0000</pubDate><guid>https://openjny.github.io/posts/2019/12/25/alb-snat/</guid><description>&lt;p>この記事では、Azure Load Balancer の配下にある VM から、インターネットと通信したい時の話を取りあげます。
具体的には、いわゆる SNAT と呼ばれる仕組みで、Outbound 通信ができるパターンが LB の構成に依存していくつか存在するので、それを紹介します。&lt;/p>
&lt;h2 id="背景">
 背景
 &lt;a class="heading-link" href="#%e8%83%8c%e6%99%af">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="見出しへのリンク">&lt;/i>
 &lt;span class="sr-only">見出しへのリンク&lt;/span>
 &lt;/a>
&lt;/h2></description></item><item><title>Ananta: Azure を支えるステートフル L4 ロードバランサー</title><link>https://openjny.github.io/posts/2019/12/23/ananta/</link><pubDate>Mon, 23 Dec 2019 00:00:00 +0000</pubDate><guid>https://openjny.github.io/posts/2019/12/23/ananta/</guid><description>&lt;p>この記事は &lt;a href="https://qiita.com/advent-calendar/2019/microsoft-azure-tech" class="external-link" target="_blank" rel="noopener">Microsoft Azure Tech Advent Calendar 2019&lt;/a> の 18 日目の記事です。
今日は、Azure の裏側の話、データーセンター (DC) を支える、Ananta と呼ばれる Software Load Balancer (SLB) アーキテクチャを紹介したいと思います。&lt;/p>
&lt;h2 id="はじめに">
 はじめに
 &lt;a class="heading-link" href="#%e3%81%af%e3%81%98%e3%82%81%e3%81%ab">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="見出しへのリンク">&lt;/i>
 &lt;span class="sr-only">見出しへのリンク&lt;/span>
 &lt;/a>
&lt;/h2></description></item></channel></rss>